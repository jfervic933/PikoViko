/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package carlos.pikopiko;

import java.util.ArrayList;
import java.util.Random;
import javax.swing.JOptionPane;

/**
 *
 * @author carlos
 */
public class Programa extends javax.swing.JFrame {

    private static ArrayList<Jugador> listaJugadores;
    public static int turnoJugador;

    /**
     * Creates new form Ventana
     */
    public Programa() {
        if (inicializarListaJugadores()){
            initComponents();
        }
        else{
            JOptionPane.showMessageDialog(null, "Ha cancelado, hasta pronto");
            System.exit(0);
        }

    }
    
    // Este método enseña un diálogo para escoger número de jugadores y devuelve
    // el dato seleccionado
    private int numeroJugadores() {
        Integer[] numero = {2, 3, 4};

        Integer opcion = (Integer) JOptionPane.showInputDialog(null, "Selecciona número de jugadores", "Elegir",
                JOptionPane.QUESTION_MESSAGE, null, numero, numero[0]);
        
        return opcion == null ? 0 : opcion;

    }
    
    // Este método inicializa la lista de jugadores, en función del número
    // de jugadores elegidos. Devuelve true si se inicializa la lista correct.
    // 
    private boolean inicializarListaJugadores() {
        int numeroJugadores = numeroJugadores();
        // Si hay dos o más jugadores
        if (numeroJugadores != 0) {
            listaJugadores = new ArrayList<>();
            String nombre;
            for (int i = 0; i < numeroJugadores; i++) {
                nombre = JOptionPane.showInputDialog("Introduce tu nombre Jugador " + i+1);
                listaJugadores.add(new Jugador(nombre));
            }
            // Aleatoriamente selecciono uno para que comience su turno
            Random aux = new Random();
            turnoJugador = aux.nextInt(listaJugadores.size());
            listaJugadores.get(turnoJugador).setTurno(true);
            return true;
        }
        // Si no hay jugadores
        return false;
    }
    
    public static ArrayList<Jugador> getListaJugadores(){
        return listaJugadores;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelDados1 = new carlos.pikopiko.PanelDados();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelDados1, javax.swing.GroupLayout.DEFAULT_SIZE, 988, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(149, 149, 149)
                .addComponent(panelDados1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(201, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Programa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Programa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Programa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Programa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Programa principal = new Programa();
                principal.setBounds(500, 100, 1050, 800);
                principal.setResizable(false);
                principal.setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private carlos.pikopiko.PanelDados panelDados1;
    // End of variables declaration//GEN-END:variables
}
